#include <iostream>

bool inputValidator(std::string adress) //Проверка корректности ввода символов 
{
    if (adress.length() < 7 || adress[0] == '.' || adress[adress.length() - 1] == '.') return false; //Если начало или конец '.', то false
    else
    {
        int dotCount = 0;
        for (int i = 0; i < adress.length(); ++i)
        {
            if ((adress[i] < '0' && adress[i] != '.') || adress[i] > '9') return false; //Если не цифра и не точка, то false
            else
            {
                if ((adress[0] == '0' && adress[1] != '.')
                    || (i > 0 && adress[i - 1] == '.' && adress[i] == '.')
                    || (i > 1 && adress[i - 2] == '.' && adress[i - 1] == '0' && adress[i] != '.')) return false; //Исключаем ведущие нули и двойные точки
                if (adress[i] == '.') ++dotCount;
            }
        }
        return dotCount == 3;
    }
}

bool numValidator(std::string adress)
{
    int num = 0;

    for (int i = 0; i < adress.length(); ++i)
    {

        if (adress[i] == '.' || i == adress.length() - 1)
        {
            if (num > 255) return false;
            num = 0;
        }
        else if (adress[i] >= '0' && adress[i] <= '9')
        {
            num += adress[i] - '0';
            if (adress[i + 1] != '.')
            {
                num *= 10;
            }
        }
    }
    return true;
}

int main()
{
    std::cout << "Input IP adress: ";
    std::string adress;
    std::cin >> adress;

    std::cout << (inputValidator(adress) && numValidator(adress) ? "Yes" : "No") << '\n';
}
/*
Задание 4. Валидация IP-адреса


Что нужно сделать

Проверьте, задаёт ли введённая пользователем строка корректный IP-адрес четвёртой версии. IP-адрес должен представлять из
себя четыре числа, разделённые точками без пробелов, причём каждое число должно быть в диапазоне от 0 до 255 включительно.
Числа не должны содержать ведущих нулей. Других символов в строке, кроме вышеописанных, присутствовать не должно.

Пользователь вводит строку, задающую email-адрес. Программа должна вывести слово Yes, если адрес корректен, и слово No,
если это не так.


Примеры

Корректные:

127.0.0.1
255.255.255.255
1.2.3.4
55.77.213.101


Некорректные:

255.256.257.258 (числа больше 255)
0.55.33.22. (лишняя точка в конце)
10.00.000.0 (лишние нули)
23.055.255.033 (опять лишние нули)
65.123..9 (две точки подряд)
a.b.c.d (посторонние символы, помимо цифр и точек)


Советы и рекомендации

Активно используйте оператор индексации строки str[i], но помните что индексы начинаются с нуля, а не с единицы.

Создайте отдельную функцию для получения отдельных чисел из IP-адреса и валидируйте эти отдельные числа.

Для валидации отдельных цифр у чисел следует использовать оператор сравнения с константами символов. Символы от ‘0’ до ‘9’
расположены последовательно и поэтому уместные операторы <= и >=.


Что оценивается

Корректность валидации заданного пользователем адреса.

*/