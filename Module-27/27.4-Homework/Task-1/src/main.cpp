#include "Tree.h"
#include <ctime>

int main()
{
	std::srand(std::time(nullptr));
	const int countOfTrees = 5;
	Tree* trees = new Tree[countOfTrees];

	Tree::getCountOfNeighbors(trees, countOfTrees);

	delete[] trees;
}

//	Задание 1. Реализация деревни эльфов
//	
//	
//	Что нужно сделать
//	
//	Лесные эльфы расположили свою деревню в лесу, прямо на деревьях.
//	Нужно расселить эльфов по веткам деревьев, а затем подсчитать общее количество соседей определённого эльфа.
//	
//	Всего в лесу пять деревьев, на каждом из деревьев 3–5 основных больших ветвей.
//	На каждой из них расположены ещё по 2 - 3 средние ветки.Дома эльфов построены только на больших и средних ветках.
//	
//	В начале программы пользователь размещает в каждом доме по одному эльфу.
//	Делается это с помощью последовательного перебора всех имеющихся домов и запроса имени 
//	заселяемого эльфа через стандартный ввод. Если было введено None в качестве имени, 
//	то дом пропускается и не заселяется вообще никем.
//	
//	После этого требуется найти определённого эльфа по имени.
//	Имя искомого эльфа вводится через стандартный ввод. Для данного эльфа, если таковой был найден, 
//	требуется вывести общее количество эльфов, живущих вместе с ним на одной большой ветви.
//	
//	
//	Советы и рекомендации
//	
//	Реализуйте генерацию деревьев с помощью кода, используя случайные числа.
//	Для организации структуры деревьев используйте указатель this.
//	
//	
//	Что оценивается
//	
//	Корректность работы программы и элегантность принимаемых решений.