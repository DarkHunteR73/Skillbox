#include <iostream>

int main()
{
    int landscape[5][5][10];
	for (int i = 0; i < 5; ++i)
	{
		for (int j = 0; j < 5; ++j)
		{
			bool correct = false;
			int height = 0;
			while (!correct)
			{
				std::cout << "Input height in point (" << i << ", " << j << "): ";
				std::cin >> height;

				if (height >= 0 && height <= 10) correct = true;
				else std::cout << "Error! The height cannot be lower than 0 and higher than 10." << std::endl;
			}

			for (int k = 0; k < 10; ++k)
			{
				if (k < height) landscape[i][j][k] = 1;
				else landscape[i][j][k] = 0;
			}
		}
	}

	std::cout << "\n\nInput height of horizontal cut:";
	int cut;
	std::cin >> cut;

	system("cls");
	std::cout << "Result:" << std::endl;
	for (int i = 0; i < 5; ++i)
	{
		for (int j = 0; j < 5; ++j)
		{
			std::cout << landscape[i][j][cut];
		}
		std::cout << std::endl;
	}
}

/*
Задача 8. Почти-Майнкрафт

Нам всё-таки предстоит сделать некое подобие Майнкрафта. Миллионов не обещаю, но это довольно интересная задача на пространственное мышление.
У нас есть небольшой квадратный ландшафт, размером 5х5 секторов. В каждом секторе располагается блок (столбик) ландшафта, максимальная высота которого — 
это 10 блоков. Текущая высота каждого такого блока задаётся пользователем вначале программы. Итоговая задача — используя трёхмерный массив вывести в 
стандартный вывод горизонтальное сечение (или горизонтальный срез) нашего небольшого мира. Сам мир как раз должен быть представлен в виде трёхмерного массива.
Его горизонтальный срез стало быть — это двумерный массив, который надо отобразить в виде единиц и нулей. 0 — это отсутствие элемента на данном уровне в
данной точке, 1 — элемент есть. Уровень среза от 0 до 9 включительно — также задаётся в стандартном вводе.
*/