#include <iostream>
#include <vector>

void initilaizeArray(float arr[][4])
{
	std::cout << "Array initialization:\n" << std::endl;
	for (int i = 0; i < 4; ++i)
	{
		std::cout << "Enter line " << i + 1 << ": ";
		std::cin >> arr[i][0] >> arr[i][1] >> arr[i][2] >> arr[i][3];
	}
	std::cout << std::endl;
}

void initializeVector(std::vector<float>& vec)
{
	std::cout << "Vector initialization: ";
	std::cin >> vec[0] >> vec[1] >> vec[2] >> vec[3];
}

int main()
{
    float M[4][4];
    std::vector<float> V(4), R(4);

	initilaizeArray(M);
	initializeVector(V);
	
	for (int i = 0; i < 4; ++i)
	{
		float result = 0.0;
		for (int j = 0; j < 4; ++j)
		{
			result += V[i] * M[j][i];
		}
		R[i] = result;
	}

	std::cout << "\nResult: ";
	for (int i = 0; i < 4; ++i)
	{
		std::cout << R[i] << ' ';
	}

	std::cin.clear();
	std::cin.ignore(32767, '\n');
	std::cin.get();
}

/*
Задача 6. Умножение матрицы на вектор

Реализуйте частный случай умножения матрицы на матрицу, а именно — умножение вектора на матрицу. Данная операция также весьма распространена в компьютерной 
индустрии в целом и в компьютерное графике в частности, поэтому это будет хорошим упражнением.

Итак, у нас есть 4-х компонентный вектор V представленный с помощью массива, и матрица M размером 4х4, представленная в виде двумерного массива. 
Их произведением будет новый 4-х компонентный вектор R. Его компоненты будут суммой произведений компонент вектора V на строку матрицы M.
Индекс столбца при этом равен индексу соответствующей компоненты вектора R, который мы и рассчитываем в текущий момент времени.

Все входные данные, матрица M и вектор V вносятся из пользовательского ввода.  Итоговый вектор R надо вывести в консоль (std::cout). 
Тип данных элементов - всегда float. Желательно реализовать этот алгоритм с помощью вложенного цикла на умножение колонки.
*/