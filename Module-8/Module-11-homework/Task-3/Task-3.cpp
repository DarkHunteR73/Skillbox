#include <iostream>

int main()
{
    using namespace std;
    setlocale(LC_ALL, "Russian");

    float health = 0.0f, resistance = 0.0f;
    while (true)
    {
        cout << "Введите количество здоровья: ";
        cin >> health;

        cout << "Сопротивляемость магии: ";
        cin >> resistance;

        if (health > 0.0f && health <= 1.0f && resistance >= 0.0f && resistance <= 1.0f) break;
        cout << "Ошибка! Введите снова.\n";
    }

    for (float damage = 0.0f; health > 0.0f;)
    {
        cout << "Введите мощность выстрела: ";
        cin >> damage;
        if (damage <= 0)
        {
            cout << "Ошибка! Введите снова.\n";
            continue;
        }
        damage *= (1.0f - resistance);
        health -= damage;
        if (health < 0) health = 0.0f;
        cout << "Проходит урон в "<<damage<<" ед. Здоровья осталось: " << health << endl;
    }
    cout << "Орк убит\n";
    return 0;
}
/*Задача 3. Immolate Improved!

    Мы придумываем фэнтезийную онлайн-игру в жанре RPG. В орка стреляют огненными шарами разной степени мощности, 
но у него есть очки здоровья и показатель сопротивляемости магии. Очки здоровья, сопротивляемость магии и мощность 
огненного шара — это вещественные числа от нуля до единицы включительно. Чем больше мощность, тем больше урон здоровью,
но чем больше сопротивляемость магии, тем урон меньше. Например, если сопротивляемость равна нулю (0%), то будет нанесен
урон равный мощности огненного шара. Если сопротивляемость равна единице (100%), урон будет равен нулю, даже если
мощность заклинания максимальна. Напишите программу, в которой пользователь сначала задаёт количество здоровья и
сопротивляемость магии орка, а после стреляет в него огненными шарами разной мощности, пока орк не погибнет.
Мощность удара вводится с клавиатуры с каждым выстрелом. После каждого заклинания программа выводит на экран итоговый
урон от удара, и оставшиеся очки здоровья орка.
Обеспечьте контроль ввода.*/